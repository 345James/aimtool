// Copyright (c) Microsoft Corporation.
// Licensed under the MIT license.
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Microsoft.AzureIntegrationMigration.Tool.Resources {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "16.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class TraceMessages {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal TraceMessages() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Microsoft.AzureIntegrationMigration.Tool.Resources.TraceMessages", typeof(TraceMessages).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Adding sub-command {CommandType} to root command..
        /// </summary>
        internal static string AddingSubCommand {
            get {
                return ResourceManager.GetString("AddingSubCommand", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Checking library {LibraryPath}..
        /// </summary>
        internal static string CheckingLibraryForPlugins {
            get {
                return ResourceManager.GetString("CheckingLibraryForPlugins", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Creating new assembly load context for plugin path {PluginPath}..
        /// </summary>
        internal static string CreatingNewPluginAssemblyLoadContext {
            get {
                return ResourceManager.GetString("CreatingNewPluginAssemblyLoadContext", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Found plugin {StageRunnerType} in library {LibraryPath}..
        /// </summary>
        internal static string FoundPlugin {
            get {
                return ResourceManager.GetString("FoundPlugin", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Ignoring library {AssemblyPath} due to being unable to load it..
        /// </summary>
        internal static string IgnoringLibraryFileLoadFailed {
            get {
                return ResourceManager.GetString("IgnoringLibraryFileLoadFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Ignoring library {AssemblyPath} due to missing dependencies..
        /// </summary>
        internal static string IgnoringLibraryMissingDependencies {
            get {
                return ResourceManager.GetString("IgnoringLibraryMissingDependencies", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Ignoring library {AssemblyPath} as it isn&apos;t a .NET library..
        /// </summary>
        internal static string IgnoringLibraryNotDotNetImage {
            get {
                return ResourceManager.GetString("IgnoringLibraryNotDotNetImage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invoking app with command {CommandVerb}..
        /// </summary>
        internal static string InvokingApp {
            get {
                return ResourceManager.GetString("InvokingApp", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Loading application model from {ModelFile}..
        /// </summary>
        internal static string LoadingModel {
            get {
                return ResourceManager.GetString("LoadingModel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Loading plugin assembly of type {PluginType} from path {AssemblyPath}..
        /// </summary>
        internal static string LoadingPluginAssembly {
            get {
                return ResourceManager.GetString("LoadingPluginAssembly", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Loading plugin: {PluginType}..
        /// </summary>
        internal static string LoadingPluginFromType {
            get {
                return ResourceManager.GetString("LoadingPluginFromType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No model provider assembly found in {FindPath}..
        /// </summary>
        internal static string ModelProviderAssemblyNotFoundInPath {
            get {
                return ResourceManager.GetString("ModelProviderAssemblyNotFoundInPath", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Command line options validated successfully..
        /// </summary>
        internal static string OptionsValidationSuccessful {
            get {
                return ResourceManager.GetString("OptionsValidationSuccessful", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Plugin assembly {AssemblyPath} already loaded..
        /// </summary>
        internal static string PluginAssemblyAlreadyLoaded {
            get {
                return ResourceManager.GetString("PluginAssemblyAlreadyLoaded", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Trying to resolve {AssemblyName} assembly during loading model..
        /// </summary>
        internal static string ResolvingAssemblyLoadingModel {
            get {
                return ResourceManager.GetString("ResolvingAssemblyLoadingModel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Saving application model to {ModelFile}..
        /// </summary>
        internal static string SavingModel {
            get {
                return ResourceManager.GetString("SavingModel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Saving state: {SaveStatePath}..
        /// </summary>
        internal static string SavingState {
            get {
                return ResourceManager.GetString("SavingState", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Set conversion path to {ConversionPath}..
        /// </summary>
        internal static string SetConversionPath {
            get {
                return ResourceManager.GetString("SetConversionPath", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Set output model path to {OutputModelPath}..
        /// </summary>
        internal static string SetOutputModelPath {
            get {
                return ResourceManager.GetString("SetOutputModelPath", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Set state path to {StatePath}..
        /// </summary>
        internal static string SetStatePath {
            get {
                return ResourceManager.GetString("SetStatePath", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Setting event handlers for saving execution state before and after each stage runner..
        /// </summary>
        internal static string SettingStageRunnerStateEventHandlers {
            get {
                return ResourceManager.GetString("SettingStageRunnerStateEventHandlers", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Setting event handlers for saving execution state before and after each stage..
        /// </summary>
        internal static string SettingStageStateEventHandlers {
            get {
                return ResourceManager.GetString("SettingStageStateEventHandlers", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Set working path to {WorkingPath}..
        /// </summary>
        internal static string SetWorkingPath {
            get {
                return ResourceManager.GetString("SetWorkingPath", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Stage: {Stage}, State: {State}, Started (ms): {StartedOn}, Completed (ms): {CompletedOn}.
        /// </summary>
        internal static string StageExecutionStats {
            get {
                return ResourceManager.GetString("StageExecutionStats", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No stage runner assemblies found in {FindPath}..
        /// </summary>
        internal static string StageRunnerAssembliesNotFoundInPath {
            get {
                return ResourceManager.GetString("StageRunnerAssembliesNotFoundInPath", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to -&gt; Stage runner: {StageRunner}, Stage: {Stage}, State: {State}, Started (ms): {StartedOn}, Completed (ms): {CompletedOn}.
        /// </summary>
        internal static string StageRunnerExecutionStats {
            get {
                return ResourceManager.GetString("StageRunnerExecutionStats", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to !! Stage runner: {StageRunner}, Stage: {Stage}, State: {State}, Started (ms): {StartedOn}, Completed (ms): {CompletedOn}, Error: {Error}.
        /// </summary>
        internal static string StageRunnerExecutionStatsWithError {
            get {
                return ResourceManager.GetString("StageRunnerExecutionStatsWithError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Validating command line options..
        /// </summary>
        internal static string ValidatingOptions {
            get {
                return ResourceManager.GetString("ValidatingOptions", resourceCulture);
            }
        }
    }
}
